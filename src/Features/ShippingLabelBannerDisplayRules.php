<?php
/**
 * WooCommerce Onboarding Tasks
 * NOTE: DO NOT edit this file in WooCommerce core, this is generated from woocommerce-admin.
 *
 * @package Woocommerce Admin
 */

namespace Automattic\WooCommerce\Admin\Features;

use \Automattic\WooCommerce\Admin\Loader;

/**
 * Determines whether or not the Shipping Label Banner should be displayed
 */
class ShippingLabelBannerDisplayRules {
	/**
	 * Supported countries by USPS, see: https://webpmt.usps.gov/pmt010.cfm
	 *
	 * @var array
	 */
	private $supported_countries = array( 'US', 'AS', 'PR', 'VI', 'GU', 'MP', 'UM', 'FM', 'MH' );

	/**
	 * Array of supported currency codes.
	 *
	 * @var array
	 */
	private $supported_currencies = array( 'USD' );

	/**
	 * Determines whether or not the banner should be displayed
	 */
	public function should_display_banner() {
		$woocommerce_shipping_ab_active     = get_option( 'woocommerce_shipping_ab_active' );
		$woocommerce_product_needs_shipping = false;
		$woocommerce_store_in_us            = false;
		$woocommerce_store_currency_in_usd  = false;
		$base_currency                      = get_woocommerce_currency();
		$base_location                      = wc_get_base_location();

		if ( $woocommerce_shipping_ab_active ) {
			return true;
		}

		if ( $this->banner_dismissed() ) {
			return false;
		}

		if ( $this->jetpack_disconnected() ) {
			return false;
		}

		global $post;
		$order = wc_get_order( $post->ID );

		if ( ! $order ) {
			return false;
		}
		// At this point (no packaging data), only show if there's at least one existing and shippable product.
		foreach ( $order->get_items() as $item ) {
			if ( $item instanceof \WC_Order_Item_Product ) {
				$product = $item->get_product();

				if ( $product && $product->needs_shipping() ) {
					$woocommerce_product_needs_shipping = true;
				}
			}
		}

		$woocommerce_store_currency_in_usd = $this->is_supported_currency( $base_currency );

		$woocommerce_store_in_us = $this->is_supported_country( $base_location['country'] );

		return $woocommerce_product_needs_shipping && $woocommerce_store_currency_in_usd && $woocommerce_store_in_us;
	}

	/**
	 * Check if the banner was dismissed by the user
	 *
	 * @return bool
	 */
	private function banner_dismissed() {
		$dismissed_timestamp = get_option( 'woocommerce_shipping_dismissed_timestamp' );

		$dismissed_for_good = -1 === $dismissed_timestamp;
		$dismissed_24h      = time() < $dismissed_timestamp;

		return $dismissed_for_good || $dismissed_24h;
	}

	/**
	 * Check if jetpack is inactive or disconnected
	 *
	 * @return bool
	 */
	private function jetpack_disconnected() {
		return ! class_exists( '\\Jetpack' ) || ! \Jetpack::is_active();
	}

	/**
	 * Check if country code is supported by WCS.
	 *
	 * @param string $country_code Country code.
	 *
	 * @return bool
	 */
	private function is_supported_country( $country_code ) {
		return in_array( $country_code, $this->supported_countries, true );
	}

	/**
	 * Check if currency code is supported by WCS.
	 *
	 * @param string $currency_code Currency code.
	 *
	 * @return bool
	 */
	private function is_supported_currency( $currency_code ) {
		return in_array( $currency_code, $this->supported_currencies, true );
	}
}
